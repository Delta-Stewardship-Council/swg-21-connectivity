model{
  for(i in 1:N){
  # likelihood
    chl[i] ~ dnorm(mu[i], tau)
    chl.rep[i] ~ dnorm(mu[i], tau)
  # regression
    mu[i] <- B[1, inundation[doy1999[i]]] +
             B[2, inundation[doy1999[i]]] * Qant[i, inundation[doy1999[i]]] +
             B[3, inundation[doy1999[i]]] * Wtmday[doy1999[i]] +
             B[4, inundation[doy1999[i]]] * Qant[i, inundation[doy1999[i]]] * Wtmday[doy1999[i]]
             #+ eps[station_id[i]]

  # Sum antecedent components across all timesteps
  for(j in 1:2){
   Qant[i, j] <- sum(qTemp[i,,j])
}
  # Create temporary antecedent variable
  # here we create index (of Q or temp or radians) multiply weight by
  # index based on days since 1999, average of next day period, etc

    # use lag of
    for(k in 1:nlagA){ # flow from lags
      for(j in 1:2){
      qTemp[i,k,j] <-  mean(Q[(doy1999[i]-sum(pA[1:k])):(doy1999[i]-sum(pA[1:k])+pA[k] - 1)])*wA[k,j]
    }
  }


  # part of dsum
  dsum[i] <- pow(chl[i] - chl.rep[i], 2)
  }

  # Sum of the deltas for each covariate
  for(j in 1:2){ # 2 inundation periods
  sumA[j] <- sum(deltaA[,j])
  }

  # a way to avoid using ddirich distrib function in JAGS
  # use a variable drawn from gamma distrib
  # use a weight from the dirich distribution
  # use weight from that point / sum of all deltas

  # set Priors for weights using the delta trick
  #daily variable weights
  for(k in 1:nlagA){
  for(j in 1:2){ # 2 inundation periods
    wA[k,j] <- deltaA[k,j]/sumA[j]
    deltaA[k,j] ~ dgamma(alphaA[k,j],1)
    }
  }

 # Priors for random effects
  # for(r in 1:Nstation){
  # non-identifiable random effects
    # eps[r] ~ dnorm(0, tau.eps)
  # identifable random effects
    # Estar[r] <- eps[r] - mean(eps[])
  # }

  # Diffuse normal priors for regression coefficients
  for(k in 1:4){
    for(j in 1:2){
    B[k,j] ~ dnorm(0, 0.001)
    # Identifiable parameter vector
    Bstar[k,j] <- B[k,j] #+ equals(k,1)*mean(eps[])
    }
  }

  # Diffuse gamma prior for observation-level precisions
  tau ~ dgamma(0.01, 0.01)
  sig <- 1/sqrt(tau)

  # Diffuse folded-t prior for random-effect standard deviation
  # Most effective for smaller number of groups
  #sig.eps ~ dt(0, 10, 2)
  #tau.eps <- pow(abs(sig.eps), -2)

  # posterior predictive loss
  Dsum <- sum(dsum[])
}
